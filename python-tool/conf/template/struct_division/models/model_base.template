# -*- coding: UTF-8 -*-
# <file_name>.py
# Copyright (C) 2018 Vladimir Roncevic <elektron.ronca@gmail.com>
#
# <project_name> is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# <project_name> is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.
#

import sys

try:
    from app_server import db
except ImportError as e:
    msg = "\n{0}\n{1}\n".format(__file__, e)
    sys.exit(msg)  # Force close python ATS ##################################

__author__ = "Vladimir Roncevic"
__copyright__ = "Copyright 2018, Free software to use and distributed it."
__credits__ = ["Vladimir Roncevic"]
__license__ = "GNU General Public License (GPL)"
__version__ = "1.0.0"
__maintainer__ = "Vladimir Roncevic"
__email__ = "elektron.ronca@gmail.com"
__status__ = "Updated"


class Base(db.Model):
    """
        Define class Base with attribute(s) and method(s).
        
        It defines:
            attribute:
                id - Abstract Table id
                created - Abstract date of creation
                modified - Abstract date of modification
            method:
                is_authenticated - Authentication status
                is_active - Getting status
                is_anonymous - Getting info
    """

    __abstract__ = True

    id = db.Column(db.Integer, primary_key=True, autoincrement=True)
    created = db.Column(db.DateTime, nullable=False)
    modified = db.Column(db.DateTime, nullable=False)

    def is_authenticated(self):
        """
            Getting authentication status.
            :return: Authentication status
            :type: bool
        """
        return True

    def is_active(self):
        """
            Getting status.
            :return: Getting status
            :type: bool
        """
        return True

    def is_anonymous(self):
        """
            Getting info.
            :return: Getting info
            :type: bool
        """
        return False


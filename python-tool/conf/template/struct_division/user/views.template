# -*- coding: UTF-8 -*-
# views.py
# Copyright (C) 2018 Vladimir Roncevic <elektron.ronca@gmail.com>
#
# <project_name> is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# <project_name> is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <http://www.gnu.org/licenses/>.
#

import sys

try:
    from flask import Blueprint
    from flask import render_template, url_for, redirect, flash, request
    from flask_login import login_user, logout_user, login_required

    from app_server import db, bcrypt
    from app_server.user.forms import UserLogin, RegisterForm
    from app_server.models.model_user import User
except ImportError as e:
    msg = "\n{0}\n{1}\n".format(__file__, e)
    sys.exit(msg)  # Force close python ATS ##################################

__author__ = "Vladimir Roncevic"
__copyright__ = "Copyright 2018, Free software to use and distributed it."
__credits__ = ["Vladimir Roncevic"]
__license__ = "GNU General Public License (GPL)"
__version__ = "1.0.0"
__maintainer__ = "Vladimir Roncevic"
__email__ = "elektron.ronca@gmail.com"
__status__ = "Updated"

user_blueprint = Blueprint(
    "user", __name__, template_folder="templates",
    static_folder="static", url_prefix="/user"
)

@user_blueprint.route("/login/", methods=["GET", "POST"])
def login():
    form = UserLogin(request.form)
    if form.validate_on_submit():
        user = User.query.filter_by(email=form.email.data).first()
        if user and bcrypt.check_password_hash(
                user.password, request.form["password"]):
            login_user(user)
            flash("You are logged in. Welcome!", "success")
            return redirect(url_for("user.members"))
        else:
            flash("Invalid email and/or password.", "danger")
            return render_template("login.html", form=form)
    return render_template("login.html", title="Please Login", form=form)

@user_blueprint.route("/register/", methods=["GET", "POST"])
def register():
    form = RegisterForm(request.form)
    if form.validate_on_submit():
        user = User(
            fullname=form.fullname.data, username=form.username.data,
            email=form.email.data, password=form.password.data
        )
        db.session.add(user)
        db.session.commit()
        login_user(user)
        flash("Thank you for registering.", "success")
        return redirect(url_for("user.members"))
    return render_template("register.html", form=form)

@user_blueprint.route("/logout/")
@login_required
def logout():
    logout_user()
    flash("You were logged out. Bye!", "success")
    return redirect(url_for("base.home"))

@user_blueprint.route("/members/")
@login_required
def members():
    return render_template("members.html")

@user_blueprint.route("/administration/")
@login_required
def administration():
    return render_template("administration.html")

